<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.newer.mapper.TransactionMapper" >
  <resultMap id="BaseResultMap" type="com.newer.domain.Transaction" >
    <id column="transId" property="transid" jdbcType="INTEGER" />
    <result column="value" property="value" jdbcType="DOUBLE" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="paid" property="paid" jdbcType="INTEGER" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="api_transaction" property="apiTransaction" jdbcType="VARCHAR" />
    <result column="paid_time" property="paidTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    transId, value, create_time, paid, method, api_transaction, paid_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from yin_transaction
    where transId = #{transid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from yin_transaction
    where transId = #{transid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.newer.domain.Transaction" >
    insert into yin_transaction (transId, value, create_time, 
      paid, method, api_transaction, 
      paid_time)
    values (#{transid,jdbcType=INTEGER}, #{value,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{paid,jdbcType=INTEGER}, #{method,jdbcType=VARCHAR}, #{apiTransaction,jdbcType=VARCHAR}, 
      #{paidTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.newer.domain.Transaction" >
    insert into yin_transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="transid != null" >
        transId,
      </if>
      <if test="value != null" >
        value,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="paid != null" >
        paid,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="apiTransaction != null" >
        api_transaction,
      </if>
      <if test="paidTime != null" >
        paid_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="transid != null" >
        #{transid,jdbcType=INTEGER},
      </if>
      <if test="value != null" >
        #{value,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paid != null" >
        #{paid,jdbcType=INTEGER},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="apiTransaction != null" >
        #{apiTransaction,jdbcType=VARCHAR},
      </if>
      <if test="paidTime != null" >
        #{paidTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.newer.domain.Transaction" >
    update yin_transaction
    <set >
      <if test="value != null" >
        value = #{value,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="paid != null" >
        paid = #{paid,jdbcType=INTEGER},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="apiTransaction != null" >
        api_transaction = #{apiTransaction,jdbcType=VARCHAR},
      </if>
      <if test="paidTime != null" >
        paid_time = #{paidTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where transId = #{transid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.newer.domain.Transaction" >
    update yin_transaction
    set value = #{value,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      paid = #{paid,jdbcType=INTEGER},
      method = #{method,jdbcType=VARCHAR},
      api_transaction = #{apiTransaction,jdbcType=VARCHAR},
      paid_time = #{paidTime,jdbcType=TIMESTAMP}
    where transId = #{transid,jdbcType=INTEGER}
  </update>
</mapper>